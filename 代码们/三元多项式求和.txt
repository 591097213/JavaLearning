//2*2*2阶三维多项式：a[000]x^0y^0z^0 + a[001]x^0y^0z^1 + a[010]x^0y^1z^0 + a[011]x^0y^1z^1 + a[100]x^1y^0z^0 + a[101]x^1y^0z^1 + a[110]x^1y^1z^0 + a[111]x^1y^1z^
import java.text.DecimalFormat;
import java.util.Scanner;

public class A {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		while (sc.hasNext()) {
			int m = sc.nextInt();
			int n = sc.nextInt();
			int p = sc.nextInt();// 输入m,n,q为多项式的阶数
			double[][][] arr = new double[m][n][p];
			for (int i = 0; i < m; i++) {
				for (int j = 0; j < n; j++) {
					for (int k = 0; k < p; k++) {
						arr[i][j][k] = sc.nextDouble();// 输入系数三维矩阵
					}
				}
			}
			double x = sc.nextDouble();
			double y = sc.nextDouble();
			double z = sc.nextDouble();// 为x，y，z赋值
			double temp;
			double temp2;
			double re = 0;// 储存最后结果
			double t2 = 1;
// 将多项式转化为x^0(  y^0(a[000]z^0+a[001]z^1) + y^1(a[010]z^0+a[011]z^1)  ) + x^1(  y^0(a[100]z^0+a[101]z^1) + y^1(a[110]z^0+a[111]z^1)  )进行计算
			for (int i = 0; i < m; i++) {
				double t1 = 1;
				temp2 = 0;
				for (int j = 0; j < n; j++) {
					temp = arr[i][j][p - 1];
					for (int k = p - 1; k > 0; k--) {
						temp = temp * z + arr[i][j][k - 1];//计算最内层a[000]z^0+a[001]z^1
					}
					temp *= t1;
					t1 *= y;
					temp2 += temp;
				}
				temp2 *= t2;
				t2 *= x;
				re += temp2;
			}
			DecimalFormat df = new DecimalFormat("0");
			System.out.println(df.format(re));

		}

	}
}

/*Input:
 *2 2 2
 *1 1
 *1 1
 *1 1
 *1 1
 *1 2 3
 *
 *OutPut:
 *24
 */
